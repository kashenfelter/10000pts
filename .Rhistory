install.packages(c("irlba", "readr", "tibble"))
install.packages(c("hunspell", "irlba", "knitr", "readr", "rlang", "tibble"))
install.packages("hunspell")
install.packages(c("hunspell", "Rcpp"))
library(steiner)
test <- generate_obstacle(n = 25)
library(deldir)
test <- generate_obstacle(n = 25)
library(tidyverse)
test <- generate_obstacle(n = 25)
test$points
test$points$x
ggplot() + geom_polygon(aes(x, y), test$points)
test$points$y
360/12
install.packages("clue")
library(ape)
library(cccd)
library(clue)
library(deldir)
library(ggalt)
library(ggart)
library(pts10000)
library(SyNet)
library(tidyverse)
library(TSP)
# Make reproducible
set.seed(10000)
# Points ----
points <- pts10000::points
p <- ggplot() +
geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0)
x <- matrix(c(5, 1, 4, 3, 5, 2, 2, 4, 4), nrow = 3)
View(x)
solve_LSAP(x)
test <- solve_LSAP(x)
str(test)
test
test[[1]]
test[1]
test[2]
test[3]
test[4]
View(x)
dmax <- 0.015 * 10000
setwd("C:/Users/mvolz/Dropbox/mathart/10000pts")
library(ape)
library(cccd)
library(clue)
library(deldir)
library(ggforce)
library(ggalt)
library(ggart)
library(packcircles)
library(pts10000)
library(reshape2)
library(SyNet)
library(tidyverse)
library(TSP)
# Make reproducible
set.seed(10000)
# Points ----
points <- pts10000::points
p <- ggplot() +
geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0)
setwd("C:/Users/mvolz/Dropbox/mathart/10000pts")
points_id <- points %>% mutate(id = 1:nrow(.))
df <- melt(as.matrix(dist(points)), varnames = c("v1", "v2"))
View(df)
find_nearest <- function(points, id) {
xi <- points$x[id]
yi <- points$y[id]
temp <- points %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2)) %>% filter(x > xi, y > yi) %>% arrange(dist)
result <- temp[1, ] %>% mutate(xend = xi, yend = yi)
}
result <- 1:10000 %>%
map_df(~find_nearest(points, .), .id = "id")
p17 <- p + geom_segment(aes(x, y, xend = xend, yend = yend), df2, lineend = "round")
p17 <- p + geom_segment(aes(x, y, xend = xend, yend = yend), result, lineend = "round")
ggsave("plots/017-directspan.png", p17, width = 20, height = 20, units = "in")
find_nearest <- function(points, id) {
xi <- points$x[id]
yi <- points$y[id]
temp <- points %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2)) %>% filter(x < xi, y < yi) %>% arrange(dist)
result <- temp[1, ] %>% mutate(xend = xi, yend = yi)
}
result <- 1:10000 %>%
map_df(~find_nearest(points, .), .id = "id")
p17 <- p + geom_segment(aes(x, y, xend = xend, yend = yend), result, lineend = "round")
ggsave("plots/017-directspan.png", p17, width = 20, height = 20, units = "in")
find_nearest <- function(points, id) {
xi <- points$x[id]
yi <- points$y[id]
temp <- points %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2)) %>% arrange(dist)
result <- temp[seq(2), ] %>% mutate(xend = xi, yend = yi)
}
df <- points[1, ]
df <- points[1, ]
for(i in 2:10000) {
df[nrow(df)+1, ] <- find_nearest(df, i)
print(i)
}
View(df)
find_nearest <- function(points, df, id) {
xi <- points$x[id]
yi <- points$y[id]
temp <- df %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2)) %>% arrange(dist)
result <- temp[seq(2), ] %>% mutate(xend = xi, yend = yi)
}
df <- points[1, ]
for(i in 2:100) {
df[nrow(df)+1, ] <- find_nearest(points, df, i)
print(i)
}
View(df)
warnings()
View(result)
find_nearest <- function(points, df, id) {
xi <- points$x[id]
yi <- points$y[id]
temp <- df %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2)) %>% arrange(dist)
result <- temp[seq(2), ] %>% mutate(xend = xi, yend = yi)
}
df <- points[1, ]
for(i in 2:100) {
df[nrow(df)+1, ] <- find_nearest(points, df, i)
print(i)
}
View(df)
View(points)
find_nearest(points, df, 1)
find_nearest(points, df, 2)
test <- find_nearest(points, df, 2)
seq(2)
2
find_nearest <- function(points, df, id) {
xi <- points$x[id]
yi <- points$y[id]
temp <- df %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2)) %>% arrange(dist)
result <- temp[2, ] %>% mutate(xend = xi, yend = yi)
}
df <- points[1, ]
for(i in 2:100) {
df[nrow(df)+1, ] <- find_nearest(points, df, i)
print(i)
}
find_nearest <- function(points, df, id) {
xi <- points$x[id]
yi <- points$y[id]
temp <- df %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2)) %>% arrange(dist)
result <- temp[1, ] %>% mutate(xend = xi, yend = yi)
}
df <- points[1, ]
for(i in 2:100) {
df[nrow(df)+1, ] <- find_nearest(points, df, i)
print(i)
}
test <- find_nearest(points, df, 1)
View(test)
test <- find_nearest(points, df, 2)
View(test)
names(test)
find_nearest <- function(points, df, id) {
xi <- points$x[id]
yi <- points$y[id]
temp <- df %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2)) %>% arrange(dist)
result <- temp[1, ] %>% mutate(xend = xi, yend = yi)
}
find_nearest <- function(points, df, id) {
xi <- points$x[id]
yi <- points$y[id]
temp <- df %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2)) %>% arrange(dist)
result <- temp[1, ] %>% mutate(xend = xi, yend = yi)
}
df <- data.frame(x = numeric(0), y = numeric(0), dist = numeric(0), xend = numeric(0), yend = numeric(0))
df[1, c("x", "y")] <- points[1, c("x", "y")]
for(i in 2:100) {
df[nrow(df)+1, ] <- find_nearest(points, df, i)
print(i)
}
View(df)
df <- data.frame(x = numeric(0), y = numeric(0), dist = numeric(0), xend = numeric(0), yend = numeric(0))
df[1, c("x", "y")] <- points[1, c("x", "y")]
for(i in 2:100) {
df[i, ] <- find_nearest(points, df, i)
print(i)
}
n <- 10000
df <- data.frame(x = numeric(n), y = numeric(n), dist = numeric(n), xend = numeric(n), yend = numeric(n))
df[1, c("x", "y")] <- points[1, c("x", "y")]
find_nearest <- function(points, df, id) {
xi <- points$x[id]
yi <- points$y[id]
temp <- df %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2)) %>% arrange(dist)
result <- temp[1, ] %>% mutate(xend = xi, yend = yi)
}
n <- 10000
df <- data.frame(x = numeric(n), y = numeric(n), dist = numeric(n), xend = numeric(n), yend = numeric(n))
df[1, c("x", "y")] <- points[1, c("x", "y")]
for(i in 2:100) {
df[i, ] <- find_nearest(points, df, i)
print(i)
}
p18 <- p + geom_segment(aes(x, y, xend = xend, yend = yend), df, lineend = "round")
ggsave("plots/18-online.png", p18, width = 20, height = 20, units = "in")
id <- 2
points <- points %>% mutate(index = 1:nrow(.))
xi <- points$x[id]
yi <- points$y[id]
temp <- points %>% filter(index < id) mutate(dist = sqrt((x - xi)^2 + (y - yi)^2)) %>% arrange(dist)
temp <- points %>% filter(index < id) %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2)) %>% arrange(dist)
View(temp)
result <- temp[1, ] %>% mutate(xend = xi, yend = yi)
View(result)
find_nearest <- function(points, id) {
points <- points %>% mutate(index = 1:nrow(.))
xi <- points$x[id]
yi <- points$y[id]
temp <- points %>% filter(index < id) %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2)) %>% arrange(dist)
result <- temp[1, ] %>% mutate(xend = xi, yend = yi)
}
n <- 10000
find_nearest <- function(points, id) {
points <- points %>% mutate(index = 1:nrow(.))
xi <- points$x[id]
yi <- points$y[id]
temp <- points %>% filter(index < id) %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2)) %>% arrange(dist)
result <- temp[1, ] %>% mutate(xend = xi, yend = yi)
}
df <- data.frame(x = numeric(n), y = numeric(n), dist = numeric(n), xend = numeric(n), yend = numeric(n))
df[1, c("x", "y")] <- points[1, c("x", "y")]
for(i in 2:100) {
df[i, ] <- find_nearest(points, df, i)
print(i)
}
df <- data.frame(x = numeric(n), y = numeric(n), dist = numeric(n), xend = numeric(n), yend = numeric(n))
df[1, c("x", "y")] <- points[1, c("x", "y")]
for(i in 2:100) {
df[i, ] <- find_nearest(points, i)
print(i)
}
p18 <- p + geom_segment(aes(x, y, xend = xend, yend = yend), df, lineend = "round")
ggsave("plots/18-online.png", p18, width = 20, height = 20, units = "in")
for(i in 2:n) {
df[i, ] <- find_nearest(points, i)
print(i)
}
n <- 10000
find_nearest <- function(points, id) {
points <- points %>% mutate(index = 1:nrow(.))
xi <- points$x[id]
yi <- points$y[id]
temp <- points %>% filter(index < id) %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2)) %>% arrange(dist)
result <- temp[1, ] %>% mutate(xend = xi, yend = yi)
}
df <- data.frame(x = numeric(n), y = numeric(n), dist = numeric(n), xend = numeric(n), yend = numeric(n))
df[1, c("x", "y")] <- points[1, c("x", "y")]
for(i in 2:n) {
df[i, ] <- find_nearest(points, i)
print(i)
}
p18 <- p + geom_segment(aes(x, y, xend = xend, yend = yend), df, lineend = "round")
ggsave("plots/18-online.png", p18, width = 20, height = 20, units = "in")
View(df)
p18 <- p + geom_segment(aes(x, y, xend = xend, yend = yend), df %>% filter(dist < 1000), lineend = "round")
ggsave("plots/18-online.png", p18, width = 20, height = 20, units = "in")
p18 <- p + geom_segment(aes(x, y, xend = xend, yend = yend), df %>% filter(dist < 150), lineend = "round")
ggsave("plots/18-online.png", p18, width = 20, height = 20, units = "in")
p18 <- p + geom_segment(aes(x, y, xend = xend, yend = yend), df %>% filter(dist < 1), lineend = "round")
ggsave("plots/18-online.png", p18, width = 20, height = 20, units = "in")
View(df)
setwd("C:/Users/mvolz/Dropbox/mathart/10000pts")
library(ape)
library(cccd)
library(clue)
library(deldir)
library(ggforce)
library(ggalt)
library(ggart)
library(packcircles)
library(pts10000)
library(reshape2)
library(SyNet)
library(tidyverse)
library(TSP)
# Make reproducible
set.seed(10000)
# Points ----
points <- pts10000::points
p <- ggplot() +
geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0)
df <- points
df <- points %>% mutate(xend = NA, yend = NA)
View(df)
df <- points %>% mutate(xend = NA, yend = NA, id = 1:nrow(.))
View(df)
for(i in 2:nrow(points)) {
xi <- points$x[i]
yi <- points$y[i]
temp <- df %>%
filter(id < i) %>%
mutate(dist = sqrt((xi - x)^2 + (yi - y)^2)) %>%
arrange(dist)
df[i, c("xend", "yend")] <- c(temp$x[1], temp$y[1])
}
for(i in 2:nrow(points)) {
xi <- points$x[i]
yi <- points$y[i]
temp <- df %>%
filter(id < i) %>%
mutate(dist = sqrt((xi - x)^2 + (yi - y)^2)) %>%
arrange(dist)
df[i, c("xend", "yend")] <- c(temp$x[1], temp$y[1])
print(i)
}
p18 <- p + geom_segment(aes(x, y, xend = xend, yend = yend), df %>% filter(dist < 1), lineend = "round")
p18 <- p + geom_segment(aes(x, y, xend = xend, yend = yend), df, lineend = "round")
ggsave("plots/18-online.png", p18, width = 20, height = 20, units = "in")
