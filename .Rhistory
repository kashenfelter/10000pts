#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), df3, colour = "black", fill = "transparent")
ggsave("plots/019-quadtree.png", p19, width = 20, height = 20, units = "in")
n <- nrow(points)
df <- data.frame(xmin = numeric(1), ymin = numeric(1), xmax = numeric(1), ymax = numeric(1))
df[1, ] <- c(0, 0, 10000, 10000)
k <- 1
finished <- FALSE
while(!finished) {
square <- data.frame(x = c(df$xmin[k], df$xmax[k], df$xmax[k], df$xmin[k]), y = c(df$ymin[k], df$ymin[k], df$ymax[k], df$ymax[k]))
temp <- points %>% filter(x >= df$xmin[k], x < df$xmax[k], y >= df$ymin[k], y < df$ymax[k])
if(nrow(temp) > 0) {
x1 <- df$xmin[k]
y1 <- df$ymin[k]
x2 <- df$xmax[k]
y2 <- df$ymin[k]
x3 <- df$xmax[k]
y3 <- df$ymax[k]
x4 <- df$xmin[k]
y4 <- df$ymax[k]
new_rows <- data.frame(xmin = c(x1,        (x2+x1)/2, (x2+x1)/2,  x1),
ymin = c(y1,         y1,       (y3+y2)/2, (y3+y2)/2),
xmax = c((x2+x1)/2,  x2,        x2,       (x2+x1)/2),
ymax = c((y3+y2)/2, (y3+y2)/2,  y3,        y3))
df <- rbind(df, new_rows)
}
k <- k + 1
if(k > nrow(df)) {
finished <- TRUE
}
print(k)
}
df2 <- df %>% mutate(id = 1:nrow(.), x1 = xmin, y1 = ymin, x2 = xmax, y2 = ymin, x3 = xmax, y3 = ymax, x4 = xmin, y4 = ymax) %>%
select(id, x1, y1, x2, y2, x3, y3, x4, y4)
df3 <- (df2 %>% select(id, x1, y1) %>% rename(x = x1, y = y1)) %>%
rbind((df2 %>% select(id, x2, y2) %>% rename(x = x2, y = y2))) %>%
rbind((df2 %>% select(id, x3, y3) %>% rename(x = x3, y = y3))) %>%
rbind((df2 %>% select(id, x4, y4) %>% rename(x = x4, y = y4)))
df3
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), df3, colour = "black", fill = "transparent")
ggsave("plots/019-quadtree.png", p19, width = 20, height = 20, units = "in")
setwd("C:/Users/mvolz/Dropbox/mathart/10000pts/pts10000/R")
library(devtools)
library(roxygen2)
setwd("..")
document()
setwd("..")
install("pts10000")
setwd("C:/Users/mvolz/Dropbox/mathart/10000pts")
library(ape)
library(cccd)
library(clue)
library(deldir)
library(ggforce)
library(ggalt)
library(ggart)
library(packcircles)
library(pts10000)
library(reshape2)
library(sp)
library(SyNet)
library(tidyverse)
library(TSP)
# Make reproducible
set.seed(10000)
# Points ----
points <- pts10000::points
p <- ggplot() +
geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0)
df <- kdtree(points)
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), df, colour = "black", fill = "transparent")
ggsave("plots/019-quadtree.png", p19, width = 20, height = 20, units = "in")
View(df)
setwd("C:/Users/mvolz/Dropbox/mathart/10000pts")
library(ape)
library(cccd)
library(clue)
library(deldir)
library(ggforce)
library(ggalt)
library(ggart)
library(packcircles)
library(pts10000)
library(reshape2)
library(sp)
library(SyNet)
library(tidyverse)
library(TSP)
# Make reproducible
set.seed(10000)
# Points ----
points <- pts10000::points
p <- ggplot() +
geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0)
df <- quadtree(points)
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), df, colour = "black", fill = "transparent")
ggsave("plots/019-quadtree.png", p19, width = 20, height = 20, units = "in")
m <- 1
seq(m+1, m+5)
seq(m+1, m+4)
df <- data.frame(xmin = numeric(10^6), ymin = numeric(10^6), xmax = numeric(10^6), ymax = numeric(10^6))
View(df)
quadtree <- function(points) {
n <- nrow(points)
df <- data.frame(xmin = numeric(10^6), ymin = numeric(10^6), xmax = numeric(10^6), ymax = numeric(10^6))
df[1, ] <- c(0, 0, 10000, 10000)
k <- 1 # Row being examined
m <- 1 # Number of rows so far
finished <- FALSE
while(!finished) {
square <- data.frame(x = c(df$xmin[k], df$xmax[k], df$xmax[k], df$xmin[k]), y = c(df$ymin[k], df$ymin[k], df$ymax[k], df$ymax[k]))
temp <- points %>% filter(x >= df$xmin[k], x < df$xmax[k], y >= df$ymin[k], y < df$ymax[k])
if(nrow(temp) > 0) {
x1 <- df$xmin[k]
y1 <- df$ymin[k]
x2 <- df$xmax[k]
y2 <- df$ymin[k]
x3 <- df$xmax[k]
y3 <- df$ymax[k]
x4 <- df$xmin[k]
y4 <- df$ymax[k]
new_rows <- data.frame(xmin = c(x1,        (x2+x1)/2, (x2+x1)/2,  x1),
ymin = c(y1,         y1,       (y3+y2)/2, (y3+y2)/2),
xmax = c((x2+x1)/2,  x2,        x2,       (x2+x1)/2),
ymax = c((y3+y2)/2, (y3+y2)/2,  y3,        y3))
df[seq(m+1, m+4)] <- new_rows
m <- m + 4
}
k <- k + 1
if(k > m) {
finished <- TRUE
}
print(k)
}
df2 <- df[1:m, ] %>%
mutate(id = 1:nrow(.), x1 = xmin, y1 = ymin, x2 = xmax, y2 = ymin, x3 = xmax, y3 = ymax, x4 = xmin, y4 = ymax) %>%
select(id, x1, y1, x2, y2, x3, y3, x4, y4)
df3 <- (df2 %>% select(id, x1, y1) %>% rename(x = x1, y = y1)) %>%
rbind((df2 %>% select(id, x2, y2) %>% rename(x = x2, y = y2))) %>%
rbind((df2 %>% select(id, x3, y3) %>% rename(x = x3, y = y3))) %>%
rbind((df2 %>% select(id, x4, y4) %>% rename(x = x4, y = y4)))
df3
}
n <- nrow(points)
df <- data.frame(xmin = numeric(10^6), ymin = numeric(10^6), xmax = numeric(10^6), ymax = numeric(10^6))
df[1, ] <- c(0, 0, 10000, 10000)
k <- 1 # Row being examined
m <- 1 # Number of rows so far
finished <- FALSE
while(!finished) {
square <- data.frame(x = c(df$xmin[k], df$xmax[k], df$xmax[k], df$xmin[k]), y = c(df$ymin[k], df$ymin[k], df$ymax[k], df$ymax[k]))
temp <- points %>% filter(x >= df$xmin[k], x < df$xmax[k], y >= df$ymin[k], y < df$ymax[k])
if(nrow(temp) > 0) {
x1 <- df$xmin[k]
y1 <- df$ymin[k]
x2 <- df$xmax[k]
y2 <- df$ymin[k]
x3 <- df$xmax[k]
y3 <- df$ymax[k]
x4 <- df$xmin[k]
y4 <- df$ymax[k]
new_rows <- data.frame(xmin = c(x1,        (x2+x1)/2, (x2+x1)/2,  x1),
ymin = c(y1,         y1,       (y3+y2)/2, (y3+y2)/2),
xmax = c((x2+x1)/2,  x2,        x2,       (x2+x1)/2),
ymax = c((y3+y2)/2, (y3+y2)/2,  y3,        y3))
df[seq(m+1, m+4)] <- new_rows
m <- m + 4
}
k <- k + 1
if(k > m) {
finished <- TRUE
}
print(k)
}
df2 <- df[1:m, ] %>%
mutate(id = 1:nrow(.), x1 = xmin, y1 = ymin, x2 = xmax, y2 = ymin, x3 = xmax, y3 = ymax, x4 = xmin, y4 = ymax) %>%
select(id, x1, y1, x2, y2, x3, y3, x4, y4)
df3 <- (df2 %>% select(id, x1, y1) %>% rename(x = x1, y = y1)) %>%
rbind((df2 %>% select(id, x2, y2) %>% rename(x = x2, y = y2))) %>%
rbind((df2 %>% select(id, x3, y3) %>% rename(x = x3, y = y3))) %>%
rbind((df2 %>% select(id, x4, y4) %>% rename(x = x4, y = y4)))
df3
df <- df3
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), df, colour = "black", fill = "transparent")
ggsave("plots/019-quadtree.png", p19, width = 20, height = 20, units = "in")
n <- nrow(points)
df <- data.frame(xmin = numeric(10^6), ymin = numeric(10^6), xmax = numeric(10^6), ymax = numeric(10^6))
df[1, ] <- c(0, 0, 10000, 10000)
k <- 1 # Row being examined
m <- 1 # Number of rows so far
finished <- FALSE
while(!finished) {
square <- data.frame(x = c(df$xmin[k], df$xmax[k], df$xmax[k], df$xmin[k]), y = c(df$ymin[k], df$ymin[k], df$ymax[k], df$ymax[k]))
temp <- points %>% filter(x >= df$xmin[k], x < df$xmax[k], y >= df$ymin[k], y < df$ymax[k])
if(nrow(temp) > 0) {
x1 <- df$xmin[k]
y1 <- df$ymin[k]
x2 <- df$xmax[k]
y2 <- df$ymin[k]
x3 <- df$xmax[k]
y3 <- df$ymax[k]
x4 <- df$xmin[k]
y4 <- df$ymax[k]
new_rows <- data.frame(xmin = c(x1,        (x2+x1)/2, (x2+x1)/2,  x1),
ymin = c(y1,         y1,       (y3+y2)/2, (y3+y2)/2),
xmax = c((x2+x1)/2,  x2,        x2,       (x2+x1)/2),
ymax = c((y3+y2)/2, (y3+y2)/2,  y3,        y3))
df[seq(m+1, m+4), ] <- new_rows
m <- m + 4
}
k <- k + 1
if(k > m) {
finished <- TRUE
}
print(k)
}
df2 <- df[1:m, ] %>%
mutate(id = 1:nrow(.), x1 = xmin, y1 = ymin, x2 = xmax, y2 = ymin, x3 = xmax, y3 = ymax, x4 = xmin, y4 = ymax) %>%
select(id, x1, y1, x2, y2, x3, y3, x4, y4)
df3 <- (df2 %>% select(id, x1, y1) %>% rename(x = x1, y = y1)) %>%
rbind((df2 %>% select(id, x2, y2) %>% rename(x = x2, y = y2))) %>%
rbind((df2 %>% select(id, x3, y3) %>% rename(x = x3, y = y3))) %>%
rbind((df2 %>% select(id, x4, y4) %>% rename(x = x4, y = y4)))
df <- df3
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), df, colour = "black", fill = "transparent")
ggsave("plots/019-quadtree.png", p19, width = 20, height = 20, units = "in")
setwd("C:/Users/mvolz/Dropbox/mathart/10000pts/pts10000/R")
library(devtools)
library(roxygen2)
setwd("..")
document()
setwd("..")
install("pts10000")
setwd("C:/Users/mvolz/Dropbox/mathart/10000pts")
library(ape)
library(cccd)
library(clue)
library(deldir)
library(ggforce)
library(ggalt)
library(ggart)
library(packcircles)
library(pts10000)
library(reshape2)
library(sp)
library(SyNet)
library(tidyverse)
library(TSP)
# Make reproducible
set.seed(10000)
# Points ----
points <- pts10000::points
p <- ggplot() +
geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0)
df <- quadtree(points)
n <- nrow(points)
df <- data.frame(xmin = numeric(10^6), ymin = numeric(10^6), xmax = numeric(10^6), ymax = numeric(10^6))
df[1, ] <- c(0, 0, 10000, 10000)
k <- 1 # Row being examined
m <- 1 # Number of rows so far
finished <- FALSE
while(!finished) {
square <- data.frame(x = c(df$xmin[k], df$xmax[k], df$xmax[k], df$xmin[k]), y = c(df$ymin[k], df$ymin[k], df$ymax[k], df$ymax[k]))
temp <- points %>% filter(x >= df$xmin[k], x < df$xmax[k], y >= df$ymin[k], y < df$ymax[k])
if(nrow(temp) > 0) {
x1 <- df$xmin[k]
y1 <- df$ymin[k]
x2 <- df$xmax[k]
y2 <- df$ymin[k]
x3 <- df$xmax[k]
y3 <- df$ymax[k]
x4 <- df$xmin[k]
y4 <- df$ymax[k]
new_rows <- data.frame(xmin = c(x1,        (x2+x1)/2, (x2+x1)/2,  x1),
ymin = c(y1,         y1,       (y3+y2)/2, (y3+y2)/2),
xmax = c((x2+x1)/2,  x2,        x2,       (x2+x1)/2),
ymax = c((y3+y2)/2, (y3+y2)/2,  y3,        y3))
df[seq(m+1, m+4), ] <- new_rows
m <- m + 4
}
k <- k + 1
if(k > m) {
finished <- TRUE
}
print(k)
}
df2 <- df[1:m, ] %>%
mutate(id = 1:nrow(.), x1 = xmin, y1 = ymin, x2 = xmax, y2 = ymin, x3 = xmax, y3 = ymax, x4 = xmin, y4 = ymax) %>%
select(id, x1, y1, x2, y2, x3, y3, x4, y4)
df3 <- (df2 %>% select(id, x1, y1) %>% rename(x = x1, y = y1)) %>%
rbind((df2 %>% select(id, x2, y2) %>% rename(x = x2, y = y2))) %>%
rbind((df2 %>% select(id, x3, y3) %>% rename(x = x3, y = y3))) %>%
rbind((df2 %>% select(id, x4, y4) %>% rename(x = x4, y = y4)))
df3
df <- df3
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), df, colour = "black", fill = "transparent")
ggsave("plots/019-quadtree.png", p19, width = 20, height = 20, units = "in")
df2 <- df %>% mutate(frame = round(nrow(.) / 500))
View(df2)
df2 <- df %>% mutate(frame = round(id * nrow(.) / 500))
df2 <- df %>% mutate(frame = roundup(id * nrow(.) / 500))
?round
df2 <- df %>% mutate(frame = ceiling(id * nrow(.) / 500))
df2 <- df %>% mutate(frame = ceiling(id * 500  /nrow(.)))
df2 <- df %>% mutate(frame = ceiling(id * 500  /nrow(.)) * 500 / 125)
df2 <- df %>% mutate(frame = ceiling(id * 500  /nrow(.)))
library(gganimate)
df2 <- df %>% mutate(frame = ceiling(id * 500  /nrow(.)))
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id, frame = .frame), df2, colour = "black", fill = "transparent")
animation::ani.options(interval = 1/15)
gganimate(p19, "gifs/019-quadtree.gif", title_frame = FALSE, ani.width = 1000, ani.height = 1000)
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id, frame = frame, cumulative = TRUE), df2, colour = "black", fill = "transparent")
animation::ani.options(interval = 1/15)
gganimate(p19, "gifs/019-quadtree.gif", title_frame = FALSE, ani.width = 1000, ani.height = 1000)
View(df)
test <- df %>% group_by(id) %>% summarise(xmin = min(x), xmax = max(x)) %>% mutate(delta = xmax - xmin)
View(test)
ggplot(test, ae(delta)) + geom_histogram()
ggplot(test, aes(delta)) + geom_histogram()
test2 <- df %>% left_join(test %>% select(id, delta), by = "id")
View(test2)
test2 <- df %>% left_join(test %>% select(id, delta), by = "id") %>% filter(delta > 10)
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), test2, colour = "black", fill = "transparent")
ggsave("plots/019a-quadtree.png", p19, width = 20, height = 20, units = "in")
test2 <- df %>% left_join(test %>% select(id, delta), by = "id") %>% filter(delta > 20)
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), test2, colour = "black", fill = "transparent")
ggsave("plots/019a-quadtree.png", p19, width = 20, height = 20, units = "in")
test2 <- df %>% left_join(test %>% select(id, delta), by = "id") %>% filter(delta > 5)
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), test2, colour = "black", fill = "transparent")
ggsave("plots/019a-quadtree.png", p19, width = 20, height = 20, units = "in")
test2 <- df %>% left_join(test %>% select(id, delta), by = "id") %>% filter(delta > 7.5)
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), test2, colour = "black", fill = "transparent")
ggsave("plots/019a-quadtree.png", p19, width = 20, height = 20, units = "in")
test2 <- df %>% left_join(test %>% select(id, delta), by = "id") %>% filter(delta > 10)
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), test2, colour = "black", fill = "transparent")
ggsave("plots/019a-quadtree.png", p19, width = 20, height = 20, units = "in")
test2 <- df %>% left_join(test %>% select(id, delta), by = "id") %>% filter(delta > 10)
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), test2, colour = "black", fill = "transparent", size = 0.5)
ggsave("plots/019a-quadtree.png", p19, width = 20, height = 20, units = "in")
test2 <- df %>% left_join(test %>% select(id, delta), by = "id") %>% filter(delta > 10)
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), test2, colour = "black", fill = "transparent", size = 0.25)
ggsave("plots/019a-quadtree.png", p19, width = 20, height = 20, units = "in")
test2 <- df %>% left_join(test %>% select(id, delta), by = "id") %>% filter(delta > 10)
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), test2, colour = "black", fill = "transparent", size = 0.45)
ggsave("plots/019a-quadtree.png", p19, width = 20, height = 20, units = "in")
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), test2, colour = "black", fill = "transparent", size = 0.35)
ggsave("plots/019a-quadtree.png", p19, width = 20, height = 20, units = "in")
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), test2, colour = "black", fill = "transparent", size = 0.5)
ggsave("plots/019a-quadtree.png", p19, width = 20, height = 20, units = "in")
?mod
nrow(test2) / 500
df2 <- df %>% mutate(frame = ceiling(id / (nrow(.) / 500)))
View(df2)
df2 <- test2 %>% mutate(frame = ceiling(id / (nrow(.) / 500)))
mvtest <- df2 %>% group_by %>% summarise(frame)
mvtest <- df2 %>% group_by(frame) %>% summarise(count = n())
df2 <- test2 %>% mutate(frame = ceiling(id / (nrow(.) / 250)))
mvtest <- df2 %>% group_by(frame) %>% summarise(count = n())
df2 <- test2 %>% mutate(frame = ceiling(id / (nrow(.) / 1000)))
mvtest <- df2 %>% group_by(frame) %>% summarise(count = n())
df2 <- test2 %>% mutate(frame = ceiling(id / (nrow(.) / 2000)))
df2 <- test2 %>% mutate(frame = ceiling(id / (nrow(.) / 2000)))
mvtest <- df2 %>% group_by(frame) %>% summarise(count = n())
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id, frame = frame, cumulative = TRUE), df2, colour = "black", fill = "transparent", size = 0.5)
animation::ani.options(interval = 1/15)
gganimate(p19, "gifs/019-quadtree.gif", title_frame = FALSE, ani.width = 1000, ani.height = 1000)
10*15/22
1/15
??an.options
??ani.options
15/22.7*10
p19 <- ggplot() +
#geom_point(aes(x, y), points, size = 1, alpha = 0.25) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id, frame = frame, cumulative = TRUE), df2, colour = "black", fill = "transparent", size = 0.4)
animation::ani.options(interval = 1/15/4)
gganimate(p19, "gifs/019-quadtree.gif", title_frame = FALSE, ani.width = 600, ani.height = 600)
gganimate(p19, "gifs/019-quadtree.gif", title_frame = FALSE, ani.width = 750, ani.height = 750)
gganimate(p19, "gifs/019-quadtree.gif", title_frame = FALSE, ani.width = 740, ani.height = 740)
