install.packages(c("irlba", "readr", "tibble"))
install.packages(c("hunspell", "irlba", "knitr", "readr", "rlang", "tibble"))
install.packages("hunspell")
install.packages(c("hunspell", "Rcpp"))
library(steiner)
test <- generate_obstacle(n = 25)
library(deldir)
test <- generate_obstacle(n = 25)
library(tidyverse)
test <- generate_obstacle(n = 25)
test$points
test$points$x
ggplot() + geom_polygon(aes(x, y), test$points)
test$points$y
360/12
install.packages("clue")
library(ape)
library(cccd)
library(clue)
library(deldir)
library(ggalt)
library(ggart)
library(pts10000)
library(SyNet)
library(tidyverse)
library(TSP)
# Make reproducible
set.seed(10000)
# Points ----
points <- pts10000::points
p <- ggplot() +
geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0)
x <- matrix(c(5, 1, 4, 3, 5, 2, 2, 4, 4), nrow = 3)
View(x)
solve_LSAP(x)
test <- solve_LSAP(x)
str(test)
test
test[[1]]
test[1]
test[2]
test[3]
test[4]
View(x)
dmax <- 0.015 * 10000
setwd("C:/Users/mvolz/Dropbox/mathart/10000pts")
library(ape)
library(cccd)
library(clue)
library(deldir)
library(ggforce)
library(ggalt)
library(ggart)
library(packcircles)
library(pts10000)
library(reshape2)
library(SyNet)
library(tidyverse)
library(TSP)
# Make reproducible
set.seed(10000)
# Points ----
points <- pts10000::points
p <- ggplot() +
geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0)
df <- points
View(df)
max_width <- 250
max_height <- 250
n <- nrow(points)
min_width <- 50
min_height <- 50
df <- points %>%
mutate(width = runif(n, min_width, max_width))
df <- points %>%
mutate(width = runif(n, min_width, max_width), height = runif(n, min_height, max_height))
df <- points %>%
mutate(width = runif(n, min_width, max_width), height = runif(n, min_height, max_height),
x1 = x - width / 2, y1 = y - height / 2,
x2 = x - width / 2, y2 = y + height / 2,
x3 = x + width / 2, y3 = y + height / 2,
x4 = x + width / 2, y4 = y - height / 2)
?gather
df <- points %>%
mutate(width = runif(n, min_width, max_width), height = runif(n, min_height, max_height),
x1 = x - width / 2, y1 = y - height / 2,
x2 = x - width / 2, y2 = y + height / 2,
x3 = x + width / 2, y3 = y + height / 2,
x4 = x + width / 2, y4 = y - height / 2) %>%
gather(key, value, 5:12)
df <- points %>%
mutate(id <- 1:n, width = runif(n, min_width, max_width), height = runif(n, min_height, max_height),
x1 = x - width / 2, y1 = y - height / 2,
x2 = x - width / 2, y2 = y + height / 2,
x3 = x + width / 2, y3 = y + height / 2,
x4 = x + width / 2, y4 = y - height / 2) %>%
gather(key, value, 5:12)
df <- points %>%
mutate(id <- 1:n, width = runif(n, min_width, max_width), height = runif(n, min_height, max_height),
x1 = x - width / 2, y1 = y - height / 2,
x2 = x - width / 2, y2 = y + height / 2,
x3 = x + width / 2, y3 = y + height / 2,
x4 = x + width / 2, y4 = y - height / 2) %>%
gather(key, value, 6:13)
df <- points %>%
mutate(id = 1:n, width = runif(n, min_width, max_width), height = runif(n, min_height, max_height),
x1 = x - width / 2, y1 = y - height / 2,
x2 = x - width / 2, y2 = y + height / 2,
x3 = x + width / 2, y3 = y + height / 2,
x4 = x + width / 2, y4 = y - height / 2) %>%
gather(key, value, 6:13)
df <- points %>%
mutate(id = 1:n, width = runif(n, min_width, max_width), height = runif(n, min_height, max_height),
x1 = x - width / 2, y1 = y - height / 2,
x2 = x - width / 2, y2 = y + height / 2,
x3 = x + width / 2, y3 = y + height / 2,
x4 = x + width / 2, y4 = y - height / 2)
df <- points %>%
mutate(id = 1:n, width = runif(n, min_width, max_width), height = runif(n, min_height, max_height),
x1 = x - width / 2, y1 = y - height / 2,
x2 = x - width / 2, y2 = y + height / 2,
x3 = x + width / 2, y3 = y + height / 2,
x4 = x + width / 2, y4 = y - height / 2)
df2 <- df %>% select(id, x1, x2)
View(df2)
df <- points %>%
mutate(id = 1:n, width = runif(n, min_width, max_width), height = runif(n, min_height, max_height),
x1 = x - width / 2, y1 = y - height / 2,
x2 = x - width / 2, y2 = y + height / 2,
x3 = x + width / 2, y3 = y + height / 2,
x4 = x + width / 2, y4 = y - height / 2)
df2 <- df %>% select(id, x1, y1) %>%
cbind(df %>% select(x2, y2))
df2 <- df %>% select(id, x1, y1) %>%
rbind(df %>% select(ed, x2, y2))
df2 <- df %>% select(id, x1, y1) %>%
rbind(df %>% select(id, x2, y2))
df2 <- (df %>% select(id, x1, y1) %>% rename(x = x1, y = y1)) %>%
rbind(df %>% select(id, x2, y2) %>% rename(x = x2, y = y2))
df2 <- (df %>% select(id, x1, y1) %>% rename(x = x1, y = y1)) %>%
rbind(df %>% select(id, x2, y2) %>% rename(x = x2, y = y2)) %>%
rbind(df %>% select(id, x3, y3) %>% rename(x = x3, y = y3)) %>%
rbind(df %>% select(id, x4, y4) %>% rename(x = x4, y = y4))
p16 <- ggplot() +
coord_equal() +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y), df2, size = 0.35, fill = "transparent")
ggsave("plots/016-squares.png", p16, width = 20, height = 20, units = "in")
p16 <- ggplot() +
coord_equal() +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), df2, size = 0.35, fill = "transparent")
ggsave("plots/016-squares.png", p16, width = 20, height = 20, units = "in")
p16 <- ggplot() +
coord_equal() +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), df2, colour = "black", fill = "transparent")
ggsave("plots/016-squares.png", p16, width = 20, height = 20, units = "in")
n <- nrow(points)
min_width <- 25
min_height <- 25
max_width <- 150
max_height <- 150
df <- points %>%
mutate(id = 1:n, width = runif(n, min_width, max_width), height = runif(n, min_height, max_height),
x1 = x - width / 2, y1 = y - height / 2,
x2 = x - width / 2, y2 = y + height / 2,
x3 = x + width / 2, y3 = y + height / 2,
x4 = x + width / 2, y4 = y - height / 2)
df2 <- (df %>% select(id, x1, y1) %>% rename(x = x1, y = y1)) %>%
rbind(df %>% select(id, x2, y2) %>% rename(x = x2, y = y2)) %>%
rbind(df %>% select(id, x3, y3) %>% rename(x = x3, y = y3)) %>%
rbind(df %>% select(id, x4, y4) %>% rename(x = x4, y = y4))
p16 <- ggplot() +
coord_equal() +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), df2, colour = "black", fill = "transparent")
ggsave("plots/016-squares.png", p16, width = 20, height = 20, units = "in")
p16 <- ggplot() +
coord_equal() +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_polygon(aes(x, y, group = id), df2, colour = "black", fill = "black", alpha = 0.15)
ggsave("plots/016-squares.png", p16, width = 20, height = 20, units = "in")
