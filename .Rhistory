install.packages(c("irlba", "readr", "tibble"))
install.packages(c("hunspell", "irlba", "knitr", "readr", "rlang", "tibble"))
install.packages("hunspell")
install.packages(c("hunspell", "Rcpp"))
library(steiner)
test <- generate_obstacle(n = 25)
library(deldir)
test <- generate_obstacle(n = 25)
library(tidyverse)
test <- generate_obstacle(n = 25)
test$points
test$points$x
ggplot() + geom_polygon(aes(x, y), test$points)
test$points$y
360/12
install.packages("clue")
library(ape)
library(cccd)
library(clue)
library(deldir)
library(ggalt)
library(ggart)
library(pts10000)
library(SyNet)
library(tidyverse)
library(TSP)
# Make reproducible
set.seed(10000)
# Points ----
points <- pts10000::points
p <- ggplot() +
geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0)
x <- matrix(c(5, 1, 4, 3, 5, 2, 2, 4, 4), nrow = 3)
View(x)
solve_LSAP(x)
test <- solve_LSAP(x)
str(test)
test
test[[1]]
test[1]
test[2]
test[3]
test[4]
View(x)
install.packages("devtools")
setwd("C:/Users/mvolz/Dropbox/mathart/10000pts")
library(ape)
library(cccd)
library(clue)
library(deldir)
library(ggalt)
library(ggart)
library(pts10000)
library(SyNet)
library(tidyverse)
library(TSP)
# Make reproducible
set.seed(10000)
# Points ----
points <- pts10000::points
p <- ggplot() +
geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0)
find_nearest <- function(points, id, n) {
xi <- points$x[id]
yi <- points$y[id]
temp <- points %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2)) %>% arrange(dist)
result <- temp[seq(2, n + 1), ] %>% mutate(xend = xi, yend = yi)
}
find_nearest(points, 1, 1)
test <- find_nearest(points, 1, 1)
View(test)
find_nearest <- function(points, id, n) {
xi <- points$x[id]
yi <- points$y[id]
temp <- points %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2)) %>% arrange(dist)
result <- temp[seq(2, n + 1), ] %>% mutate(xend = xi, yend = yi)
result$dist / 2
}
find_nearest(points, 1, 1)
result <- 1:10000 %>%
map_df(~find_nearest(points, ., 1), .id = "id")
df <- points
df <- points %>% mutate(r = NA)
for(i in 1:10000) {
xi <- points$x[i]
yi <- points$y[i]
temp <- points %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2)) %>% arrange(dist)
df$r[i] <- temp$dist[2] / 2
print(i)
}
View(df)
library(ggforce)
?geom_circle
p12 <- p + geom_circle(aes(x0 = x, y0 = y, r = r), df, n = 3)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in")
getwd()
p12 <- ggplot() +
#geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r), df, n = 3)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in")
p12 <- ggplot() +
#geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r), df, n = 4)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in")
p12 <- ggplot() +
#geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r*2), df, n = 4)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in")
p12 <- ggplot() +
#geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r*1), df, n = 6)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in")
p12 <- ggplot() +
#geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r*1), df, n = 6, fill = "black")
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in")
p12 <- ggplot() +
#geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r*1), df, n = 10)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in")
row_number(points[20, ])
df <- points %>% mutate(r = 0)
for(i in 1:10000) {
xi <- points$x[i]
yi <- points$y[i]
temp <- points %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2) - r) %>% arrange(dist)
df$r[i] <- temp$dist[2] / 2
print(i)
}
p12 <- ggplot() +
#geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r*1), df, n = 10)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in")
df <- points %>% mutate(r = 0)
for(i in 1:10000) {
xi <- points$x[i]
yi <- points$y[i]
temp <- df %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2) - r) %>% arrange(dist)
df$r[i] <- temp$dist[2] / 2
print(i)
}
p12 <- ggplot() +
#geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r*1), df, n = 10)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in")
df <- points %>% mutate(r = 0)
for(i in 1:10000) {
xi <- points$x[i]
yi <- points$y[i]
temp <- df %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2) - r) %>% arrange(dist)
df$r[i] <- temp$dist[2] / 1
print(i)
}
p12 <- ggplot() +
#geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r*1), df, n = 10)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in")
?xlim
?limits
?lims
p12 <- ggplot() +
#geom_point(aes(x, y), points, size = 1) +
coord_equal() +
#xlim(0, 10000) +
#ylim(0, 10000) +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000))
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r*1), df, n = 10)
p12 <- ggplot() +
#geom_point(aes(x, y), points, size = 1) +
coord_equal() +
#xlim(0, 10000) +
#ylim(0, 10000) +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r*1), df, n = 10)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in")
p12 <- ggplot() +
#geom_point(aes(x, y), points, size = 1) +
coord_equal() +
#xlim(0, 10000) +
#ylim(0, 10000) +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r*1), df, n = 100)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in")
p12 <- ggplot() +
#geom_point(aes(x, y), points, size = 1) +
coord_equal() +
#xlim(0, 10000) +
#ylim(0, 10000) +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r), df, n = 360)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in")
df <- points %>% mutate(r = 0)
for(i in 1:10000) {
xi <- points$x[i]
yi <- points$y[i]
temp <- df %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2) - 0.9*r) %>% arrange(dist)
df$r[i] <- temp$dist[2] / 1
print(i)
}
p12 <- ggplot() +
#geom_point(aes(x, y), points, size = 1) +
coord_equal() +
#xlim(0, 10000) +
#ylim(0, 10000) +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r), df, n = 360)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in")
df <- points %>% mutate(r = 0)
for(i in 1:10000) {
xi <- points$x[i]
yi <- points$y[i]
temp <- df %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2) - r) %>% arrange(dist)
df$r[i] <- temp$dist[2]
print(i)
}
p12 <- ggplot() +
coord_equal() +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r), df, n = 360)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in")
df <- points %>% mutate(r = 10)
for(i in 1:10000) {
xi <- points$x[i]
yi <- points$y[i]
temp <- df %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2) - r) %>% arrange(dist)
df$r[i] <- temp$dist[2]
print(i)
}
p12 <- ggplot() +
coord_equal() +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r), df, n = 360)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in")
df <- points %>% mutate(r = 25)
for(i in 1:10000) {
xi <- points$x[i]
yi <- points$y[i]
temp <- df %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2) - r) %>% arrange(dist)
df$r[i] <- temp$dist[2]
print(i)
}
p12 <- ggplot() +
coord_equal() +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r), df, n = 360)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in")
df <- points %>% mutate(r = 10)
for(i in 1:10000) {
xi <- points$x[i]
yi <- points$y[i]
temp <- df %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2) - r) %>% arrange(dist)
df$r[i] <- temp$dist[2]
print(i)
}
p12 <- ggplot() +
coord_equal() +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r), df, n = 360)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in")
df <- points %>% mutate(id = 1:nrow(.), xmin = x - 5, xmax = x + 5, ymin = y - 5, ymax = y + 5)
View(df)
df <- points %>% mutate(r = 10)
for(i in 1:10000) {
xi <- points$x[i]
yi <- points$y[i]
temp <- df %>% mutate(dist = sqrt((x - xi)^2 + (y - yi)^2) - r) %>% arrange(dist)
df$r[i] <- temp$dist[2]
print(i)
}
p12 <- ggplot() +
coord_equal() +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r), df, n = 4)
ggsave("plots/012-squares.png", p12, width = 20, height = 20, units = "in")
p12 <- ggplot() +
coord_equal() +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r), df, n = 720)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in")
?ggsave
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in", dpi = 720)
p12 <- ggplot() +
coord_equal() +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r), df, n = 720, size = 0.5)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in", dpi = 720)
p12 <- ggplot() +
coord_equal() +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r), df, n = 720, size = 0.7)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in", dpi = 720)
p12 <- ggplot() +
coord_equal() +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r), df, n = 720, size = 0.6)
ggsave("plots/012-circles.png", p12, width = 20, height = 20, units = "in", dpi = 720)
r <- 50
r <- 50
df <- points %>% mutate(r = r)
View(df)
r <- 50
df <- points %>% mutate(size = r)
r <- 50
df <- points %>% mutate(size = r)
library(packcircles)
test <- circleRepelLayout(df, xlim = 10000, ylim = 10000, sizetype = "radius")
df <- test
df2 <- df
p13 <- ggplot() +
coord_equal() +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = r), df2, n = 10, size = 0.6)
df2 <- test$layout
View(df2)
p13 <- ggplot() +
coord_equal() +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = radius), df2, n = 10, size = 0.6)
ggsave("plots/013-packcircles.png", p13, width = 20, height = 20, units = "in", dpi = 300)
p13 <- ggplot() +
coord_equal() +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 10000)) +
theme_blankcanvas(margin_cm = 0) +
geom_circle(aes(x0 = x, y0 = y, r = radius), df2, n = 720, size = 0.6)
ggsave("plots/013-packcircles.png", p13, width = 20, height = 20, units = "in", dpi = 720)
