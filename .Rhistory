install.packages(c("irlba", "readr", "tibble"))
install.packages(c("hunspell", "irlba", "knitr", "readr", "rlang", "tibble"))
install.packages("hunspell")
install.packages(c("hunspell", "Rcpp"))
library(steiner)
test <- generate_obstacle(n = 25)
library(deldir)
test <- generate_obstacle(n = 25)
library(tidyverse)
test <- generate_obstacle(n = 25)
test$points
test$points$x
ggplot() + geom_polygon(aes(x, y), test$points)
test$points$y
360/12
install.packages("clue")
library(ape)
library(cccd)
library(clue)
library(deldir)
library(ggalt)
library(ggart)
library(pts10000)
library(SyNet)
library(tidyverse)
library(TSP)
# Make reproducible
set.seed(10000)
# Points ----
points <- pts10000::points
p <- ggplot() +
geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0)
x <- matrix(c(5, 1, 4, 3, 5, 2, 2, 4, 4), nrow = 3)
View(x)
solve_LSAP(x)
test <- solve_LSAP(x)
str(test)
test
test[[1]]
test[1]
test[2]
test[3]
test[4]
View(x)
dmax <- 0.015 * 10000
install.packages("glue")
install.packages(c("glue", "units"))
install.packages("glue")
install.packages("glue")
setwd("C:/Users/mvolz/Dropbox/mathart/10000pts")
library(ape)
library(cccd)
library(clue)
library(deldir)
library(gganimate)
library(ggforce)
library(ggalt)
library(ggart)
library(packcircles)
library(pts10000)
library(reshape2)
library(sp)
library(steiner)
library(SyNet)
library(tidyverse)
library(TSP)
library(viridis)
# Make reproducible
set.seed(10000)
# Points ----
points <- pts10000::points
p <- ggplot() +
geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0)
p0 <- ggplot() +
#geom_point(aes(x, y), points, size = 1) +
coord_equal() +
xlim(0, 10000) +
ylim(0, 10000) +
theme_blankcanvas(margin_cm = 0)
temp <- kmeans(points, 1000)
centers <- as.data.frame(temp[["centers"]]) %>% mutate(centreID = 1:nrow(.))
temp2 <- as.data.frame(temp[["cluster"]])
names(temp2) <- c("centreID")
result <- points %>% cbind(temp2) %>% left_join(centers, by = "centreID") %>%
rename(x = x.x, y = y.x, xend = x.y, yend = y.y)
edges <- data.frame(x = numeric(0), y = numeric(0), xend = numeric(0), yend = numeric(0), group = integer(0))
for(i in 1:max(result$centreID)) {
temp <- chull_edges(result %>% filter(centreID == i) %>% select(x, y)) %>% mutate(group = i)
edges <- edges %>% rbind(temp)
}
p26 <- p0 + geom_polygon(aes(x, y, group = group, fill = group), edges)+ scale_fill_gradient(low = "white", high = "black")
geom_segment(aes(x, y, xend = xend, yend = yend), edges, lineend = "round")
ggsave("plots/026-kmeans-regions.png", p26, width = 20, height = 20, units = "in")
p26 <- p0 + geom_polygon(aes(x, y, group = group, fill = group), edges, colour = "black")+ scale_fill_gradient(low = "white", high = "black")
geom_segment(aes(x, y, xend = xend, yend = yend), edges, lineend = "round")
ggsave("plots/026-kmeans-regions.png", p26, width = 20, height = 20, units = "in")
